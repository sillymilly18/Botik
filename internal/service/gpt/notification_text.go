package gpt

import (
	"context"
	"fmt"
	"sync"
	"time"

	"itmostar/internal/config"
	channelscrapper "itmostar/pkg/telegram_scrapper/channel"

	slerr "github.com/defany/slogger/pkg/err"
	"github.com/sashabaranov/go-openai"
)

const notificationPushTextPrompt = `
TRAFFIC_POST = %s
TRAFFIC_POST_CREATED_AT = %s
ALARM_POST_CREATED_AT = %s
ALERT_POST = %s
NOW = %s (UTC ZONE)

–¢—ã ‚Äî —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∫–∞–∂–¥—ã–π —á–∞—Å –ø–æ–ª—É—á–∞–µ—Ç –¥–≤–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–µ–∫—Å—Ç–∞ –∏–∑ –∫–∞–Ω–∞–ª–æ–≤:
	‚Ä¢	traffic_post ‚Äî –ø—Ä–æ —Ç—Ä–∞—Ñ–∏–∫/–æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –ö—Ä—ã–º—Å–∫–æ–º –º–æ—Å—Ç—É;
	‚Ä¢	alert_post ‚Äî –ø—Ä–æ —Ç—Ä–µ–≤–æ–≥–∏ (—Ä–∞–∫–µ—Ç–∞, –ë–ü–õ–ê, —É—á–µ–Ω–∏—è, –∑–∞–∫—Ä—ã—Ç–∏—è –∏ —Ç.–ø.).

–¢–≤–æ—è –∑–∞–¥–∞—á–∞: —Ä–∞–∑–æ–±—Ä–∞—Ç—å –æ–±–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –≤–µ—Ä–Ω—É—Ç—å –û–î–ù–û –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram. –ù–∏–∫–∞–∫–∏—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤, –ø–æ—è—Å–Ω–µ–Ω–∏–π, –∫–æ–¥–∞ –∏–ª–∏ —Ä–∞–∑–º–µ—Ç–∫–∏ –≤ —Ñ–µ–Ω—Å–∞—Ö. –ü—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.

–ü—Ä–∞–≤–∏–ª–∞ –≤—ã–≤–æ–¥–∞
	1.	–ó–∞–≥–æ–ª–æ–≤–æ–∫: üåâ –ö—Ä—ã–º—Å–∫–∏–π –º–æ—Å—Ç ‚Ä¢ {–≤—Ä–µ–º—è}, –≥–¥–µ –≤—Ä–µ–º—è –±–µ—Ä–∏ —Ç–∞–∫:
	‚Ä¢	–µ—Å–ª–∏ –≤ traffic_post —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–æ (–Ω–∞–ø—Ä. ‚Äú17:00‚Äù), –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ;
	‚Ä¢	–∏–Ω–∞—á–µ –µ—Å–ª–∏ –≤ alert_post –µ—Å—Ç—å –≤—Ä–µ–º—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ;
	‚Ä¢	–∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–ª–µ now –∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
	2.	–í—ã–≤–µ–¥–∏ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞: –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –¢–∞–º–∞–Ω–∏ –∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ö—Ä—ã–º–∞ (–ö–µ—Ä—á–∏) –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–≤–∏–∂–µ–Ω–∏—è —Å –∫–∞–∂–¥–æ–π –∏–∑ —Å—Ç–æ—Ä–æ–Ω. –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å —Ñ—Ä–∞–∑—ã ‚Äú—Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –¢–∞–º–∞–Ω–∏‚Äù, ‚Äú—Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ö–µ—Ä—á–∏‚Äù ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö. –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–±—â–µ–µ ‚Äú–∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏–π –Ω–µ—Ç‚Äù ‚Äî –æ—Ç—Ä–∞–∑–∏ —ç—Ç–æ –≤ –æ–±–µ–∏—Ö —Å—Ç—Ä–æ–∫–∞—Ö.
–ü—Ä–∏–º–µ—Ä:
‚õî –°–æ —Å—Ç–æ—Ä–æ–Ω—ã –¢–∞–º–∞–Ω–∏: –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ
‚õî –°–æ —Å—Ç–æ—Ä–æ–Ω—ã –ö—Ä—ã–º–∞: –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ
	3.	–ü–∞—Ä—Å—å —á–∏—Å–ª–∞:
	‚Ä¢	–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ (\d+);
	‚Ä¢	–≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: –º–∏–Ω / —á–∞—Å;
	‚Ä¢	–ø—Ä–æ–±–∫—É –≤ –∫–º.
–ï—Å–ª–∏ –Ω–µ—Ç —è–≤–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –º–æ–∂–Ω–æ –≥—Ä—É–±–æ –æ—Ü–µ–Ω–∏—Ç—å: –æ–∂–∏–¥–∞–Ω–∏–µ_–º–∏–Ω ‚âà round(vehicles / 5) (—Ç.–µ. ~300 –¢–° ‚âà 60 –º–∏–Ω). –≠—Ç–æ —É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –º–æ–¥–µ–ª—å.
	4.	–û–ø—Ä–µ–¥–µ–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–±–µ—Ä–∏ —ç–º–æ–¥–∑–∏:
	‚Ä¢	0/–Ω–µ—Ç: üü¢
	‚Ä¢	–¥–æ ~200 –¢–° –∏–ª–∏ <30–º –∏–ª–∏ <1 –∫–º: üü°
	‚Ä¢	–¥–æ ~500 –¢–° –∏–ª–∏ 30‚Äì90–º –∏–ª–∏ 1‚Äì5 –∫–º: üü†
	‚Ä¢	–±–æ–ª—å—à–µ: üî¥
	‚Ä¢	–µ—Å–ª–∏ —è–≤–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ: ‚õî
	5.	–°—Ñ–æ—Ä–º–∏—Ä—É–π –∫—Ä–∞—Ç–∫–∏–π —Å–æ–≤–µ—Ç:
	‚Ä¢	–ï—Å–ª–∏ –æ–±–∞ —É—Ä–æ–≤–Ω—è üü¢: ‚Äú–ú–æ–∂–Ω–æ –µ—Ö–∞—Ç—å.‚Äù
	‚Ä¢	–ï—Å–ª–∏ –º–∞–∫—Å–∏–º—É–º üü°: ‚Äú–¢–µ—Ä–ø–∏–º–æ, –∑–∞–∫–ª–∞–¥—ã–≤–∞–π +{–¥–æ–ø_–º–∏–Ω}‚Äù (–¥–æ–ø_–º–∏–Ω = –º–∞–∫—Å(–æ–∂–∏–¥–∞–Ω–∏–µ,0) –Ω–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 10; –µ—Å–ª–∏ –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–µ—Ç ‚Äî –Ω–µ –ø–∏—à–∏ ‚Äú+‚Äù).
	‚Ä¢	–ï—Å–ª–∏ –µ—Å—Ç—å üü† –∏–ª–∏ –≤—ã—à–µ: ‚Äú–õ—É—á—à–µ –ø–æ–∑–∂–µ‚Äù –∏, –µ—Å–ª–∏ –≤ traffic_post –µ—Å—Ç—å –æ–∫–Ω–æ (‚Äú–ø–æ—Å–ª–µ 20:00‚Äù, ‚Äú–¥–æ 06:00‚Äù), –≤—Å—Ç–∞–≤—å –µ–≥–æ. –ò–Ω–∞—á–µ ‚Äú–õ—É—á—à–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å —Å–Ω–∏–∂–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞.‚Äù
	‚Ä¢	–ï—Å–ª–∏ üî¥: ‚Äú–ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–µ –≤—ã–µ–∑–∂–∞–π —Å–µ–π—á–∞—Å.‚Äù (–ø–ª—é—Å –æ–∫–Ω–æ, –µ—Å–ª–∏ –µ—Å—Ç—å).
	‚Ä¢	–ï—Å–ª–∏ ‚õî: ‚Äú–î–≤–∏–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ ‚Äî –∂–¥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.‚Äù
	6.	–†–∞–∑–±–µ—Ä–∏ alert_post:
	‚Ä¢	–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ‚Üí –∏–∫–æ–Ω–∫–∞:
	‚Ä¢	—Ä–∞–∫–µ—Ç–∞/—Ä–∞–∫–µ—Ç–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞ ‚Üí üöÄ
	‚Ä¢	–ë–ü–õ–ê/–¥—Ä–æ–Ω ‚Üí üöÄ
	‚Ä¢	—É—á–µ–Ω–∏—è/—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞/—Å—Ç—Ä–µ–ª—å–±—ã ‚Üí üéØ
	‚Ä¢	–æ–ø–∞—Å–Ω–æ—Å—Ç—å/—Ç—Ä–µ–≤–æ–≥–∞ –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è ‚Üí ‚ö†Ô∏è
	‚Ä¢	–û–ø—Ä–µ–¥–µ–ª–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Ä–∞–π–æ–Ω—ã (—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏: –∑–∞–ø—è—Ç–∞—è, —Ç–∏—Ä–µ, ¬´–ø–æ¬ª).
	‚Ä¢	–í—Ä–µ–º—è –≤ —Ç–µ–∫—Å—Ç–µ (—Ñ–æ—Ä–º–∞—Ç HH:MM) –ø–æ–∫–∞–∂–∏ –≤ —Å–∫–æ–±–∫–∞—Ö.
	‚Ä¢	–ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ —Ç—Ä–µ–≤–æ–∂–Ω–æ–≥–æ –Ω–µ—Ç (‚Äú–≤—Å—ë —Å–ø–æ–∫–æ–π–Ω–æ‚Äù, –ø—É—Å—Ç–æ, None) ‚Üí ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: —Å–ø–æ–∫–æ–π–Ω–æ.
	7.	–ï—Å–ª–∏ alert_post —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫) ‚Äî –≤—ã–±–µ—Ä–∏ —Å–∞–º–æ–µ —Å–µ—Ä—å—ë–∑–Ω–æ–µ (—Ä–∞–∫–µ—Ç—ã > –ë–ü–õ–ê > —É—á–µ–Ω–∏—è > —Å–ø–æ–∫–æ–π–Ω–æ). –ú–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ω—ã.
	8.	–ö–æ—Ä–æ—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä–æ–∫–∏ —É–≥—Ä–æ–∑—ã:
	‚Ä¢	üöÄ/üõ∏ –¢—Ä–µ–≤–æ–≥–∞: –ö–µ—Ä—á—å, –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å (13:45)
	‚Ä¢	–∏–ª–∏ –æ–¥–∏–Ω–æ—á–Ω—ã–µ: üöÄ –†–∞–∫–µ—Ç–Ω–∞—è: –ö–µ—Ä—á—å (13:45).
	‚Ä¢	–ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏–∫–æ–Ω–∫–∏ –Ω–µ—Ç ‚Äî –Ω–∞—á–Ω–∏ —Å ‚ö†Ô∏è.
	9.	–ù–µ –ø–∏—à–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, —Ö—ç—à—Ç–µ–≥–∏, —Å—á—ë—Ç—á–∏–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, @username –∏ —Ç.–ø.
	10.	–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π markdown-–∫–æ–¥–æ–≤—ã–µ –±–ª–æ–∫–∏. –ù–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è.
	11.	–ú–∞–∫—Å–∏–º—É–º 6 —Å—Ç—Ä–æ–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ (–ª—É—á—à–µ 4‚Äì5). –ü—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏, –Ω–æ –Ω–µ –ø–æ–¥—Ä—è–¥ –±–æ–ª–µ–µ –æ–¥–Ω–æ–π.
	12.	–í—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏ –≤ –ø–æ—Ä—è–¥–∫–µ: –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Üí 2 —Å—Ç—Ä–æ–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ ‚Üí –°–æ–≤–µ—Ç ‚Üí –£–≥—Ä–æ–∑–∞.

–ò—Ç–æ–≥ ‚Äî –æ–¥–Ω–∞ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤–æ–∫—Ä—É–≥.
`

const notificationPushTTL = 5 * time.Minute

type notificationPushCacheEntry struct {
	text               string
	alarmPost          string
	alarmPostCreated   time.Time
	trafficPost        string
	trafficPostCreated time.Time
	generatedAt        time.Time
}

var (
	notificationPushCacheMu sync.RWMutex
	notificationPushCache   *notificationPushCacheEntry
)

func (s *Service) FetchNotificationPushText(ctx context.Context) (string, error) {
	alarmPost, alarmPostCreatedAt, err := channelscrapper.FetchLastPost(ctx, config.AlarmsInfoChannel())
	if err != nil {
		return "", slerr.WithSource(err)
	}

	trafficPost, trafficPostCreatedAt, err := channelscrapper.FetchLastPost(ctx, config.GeneralInfoChannel())
	if err != nil {
		return "", slerr.WithSource(err)
	}

	notificationPushCacheMu.RLock()
	if c := notificationPushCache; c != nil {
		if time.Since(c.generatedAt) < notificationPushTTL {
			out := c.text
			notificationPushCacheMu.RUnlock()
			return out, nil
		}
	}

	notificationPushCacheMu.RUnlock()

	req := openai.ChatCompletionRequest{
		Model: openai.GPT4o,
		Messages: []openai.ChatCompletionMessage{
			{
				Role: openai.ChatMessageRoleDeveloper,
				Content: fmt.Sprintf(
					notificationPushTextPrompt,
					trafficPost,
					trafficPostCreatedAt,
					alarmPost,
					alarmPostCreatedAt,
					time.Now().UTC().String(),
				),
			},
		},
		Store: false,
	}

	resp, err := s.gpt.CreateChatCompletion(ctx, req)
	if err != nil {
		return "", slerr.WithSource(err)
	}

	outgoingMessage := resp.Choices[0].Message.Content

	notificationPushCacheMu.Lock()
	notificationPushCache = &notificationPushCacheEntry{
		text:               outgoingMessage,
		alarmPost:          alarmPost,
		alarmPostCreated:   alarmPostCreatedAt,
		trafficPost:        trafficPost,
		trafficPostCreated: trafficPostCreatedAt,
		generatedAt:        time.Now(),
	}
	notificationPushCacheMu.Unlock()

	return outgoingMessage, nil
}
