package tguser

import (
	"github.com/defany/platcom/pkg/cond"
	slerr "github.com/defany/slogger/pkg/err"
	"github.com/mymmrac/telego"
	"github.com/mymmrac/telego/telegohandler"
	"github.com/mymmrac/telego/telegoutil"
)

func (h *Handler) toggleNotifications(ctx *telegohandler.Context, message telego.Message) error {
	enableNotificationsText := `
üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã

–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–∞ –ö—Ä—ã–º—Å–∫–æ–º –º–æ—Å—Ç—É —Ä–∞–∑ –≤ —á–∞—Å.
–ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ /—Å—Ç–æ–ø –∏–ª–∏ /—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –µ—â—ë —Ä–∞–∑
`

	disableNotificationsText := `
üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã

–í—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–∞ –ö—Ä—ã–º—Å–∫–æ–º –º–æ—Å—Ç—É —Ä–∞–∑ –≤ —á–∞—Å.
–ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ /—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
`

	activated, err := h.service.ToggleNotifications(ctx, message.From.ID)
	if err != nil {
		return slerr.WithSource(err)
	}

	builder := telegoutil.Message(message.Chat.ChatID(), cond.Ternary(activated, enableNotificationsText, disableNotificationsText))

	if _, err := h.bot.SendMessage(ctx, builder); err != nil {
		return slerr.WithSource(err)
	}

	return nil
}
